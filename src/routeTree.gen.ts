/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ModelingIndexImport } from './routes/modeling/index'
import { Route as HeadshotsIndexImport } from './routes/headshots/index'
import { Route as EditorialIndexImport } from './routes/editorial/index'
import { Route as AboutIndexImport } from './routes/about/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ModelingIndexRoute = ModelingIndexImport.update({
  id: '/modeling/',
  path: '/modeling/',
  getParentRoute: () => rootRoute,
} as any)

const HeadshotsIndexRoute = HeadshotsIndexImport.update({
  id: '/headshots/',
  path: '/headshots/',
  getParentRoute: () => rootRoute,
} as any)

const EditorialIndexRoute = EditorialIndexImport.update({
  id: '/editorial/',
  path: '/editorial/',
  getParentRoute: () => rootRoute,
} as any)

const AboutIndexRoute = AboutIndexImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexImport
      parentRoute: typeof rootRoute
    }
    '/editorial/': {
      id: '/editorial/'
      path: '/editorial'
      fullPath: '/editorial'
      preLoaderRoute: typeof EditorialIndexImport
      parentRoute: typeof rootRoute
    }
    '/headshots/': {
      id: '/headshots/'
      path: '/headshots'
      fullPath: '/headshots'
      preLoaderRoute: typeof HeadshotsIndexImport
      parentRoute: typeof rootRoute
    }
    '/modeling/': {
      id: '/modeling/'
      path: '/modeling'
      fullPath: '/modeling'
      preLoaderRoute: typeof ModelingIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutIndexRoute
  '/editorial': typeof EditorialIndexRoute
  '/headshots': typeof HeadshotsIndexRoute
  '/modeling': typeof ModelingIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutIndexRoute
  '/editorial': typeof EditorialIndexRoute
  '/headshots': typeof HeadshotsIndexRoute
  '/modeling': typeof ModelingIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about/': typeof AboutIndexRoute
  '/editorial/': typeof EditorialIndexRoute
  '/headshots/': typeof HeadshotsIndexRoute
  '/modeling/': typeof ModelingIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/editorial' | '/headshots' | '/modeling'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/editorial' | '/headshots' | '/modeling'
  id:
    | '__root__'
    | '/'
    | '/about/'
    | '/editorial/'
    | '/headshots/'
    | '/modeling/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutIndexRoute: typeof AboutIndexRoute
  EditorialIndexRoute: typeof EditorialIndexRoute
  HeadshotsIndexRoute: typeof HeadshotsIndexRoute
  ModelingIndexRoute: typeof ModelingIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutIndexRoute: AboutIndexRoute,
  EditorialIndexRoute: EditorialIndexRoute,
  HeadshotsIndexRoute: HeadshotsIndexRoute,
  ModelingIndexRoute: ModelingIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about/",
        "/editorial/",
        "/headshots/",
        "/modeling/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about/": {
      "filePath": "about/index.tsx"
    },
    "/editorial/": {
      "filePath": "editorial/index.tsx"
    },
    "/headshots/": {
      "filePath": "headshots/index.tsx"
    },
    "/modeling/": {
      "filePath": "modeling/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
